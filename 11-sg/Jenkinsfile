pipeline {
    agent {
        label 'agent-1-label'
    }

    options {
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }

    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Please Choose the Action')
    }

    stages {
        stage('terraform init') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-auth') {
                    sh """
                        cd 11-sg
                        terraform init -reconfigure
                    """
                }
            }
        }

        stage('terraform plan') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-auth') {
                    sh """
                        cd 11-sg
                        terraform plan -out=tfplan
                    """
                }
            }
        }

        stage('terraform apply or destroy') {
            steps {
                withAWS(region: 'us-east', credentials: 'aws-auth') {
                    sh """
                        cd 11-sg
                        if [ ${params.ACTION} == 'apply' ]
                        then
                            terraform apply -auto-approve tfplan
                        elif [ ${params.ACTION} == 'destroy' ]
                        then
                            terraform destroy -auto-approve
                        fi
                    """
                }
            }
        }
    }

    post {
        always {
            echo "this run always"
            deleteDir()
        }
        success {
            echo "This will run only if job success"
        }

        failure {
            echo "This will runs on;y if job fail"
        }

    }
}